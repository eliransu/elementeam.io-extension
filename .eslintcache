[{"/Users/eliransuisa/projects/elementeam.io/src/fb.js":"1","/Users/eliransuisa/projects/elementeam.io/src/index.js":"2","/Users/eliransuisa/projects/elementeam.io/src/reportWebVitals.js":"3","/Users/eliransuisa/projects/elementeam.io/src/App.js":"4","/Users/eliransuisa/projects/elementeam.io/src/Tags.jsx":"5"},{"size":1787,"mtime":1611789453583,"results":"6","hashOfConfig":"7"},{"size":500,"mtime":1608739806592,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1608739806593,"results":"9","hashOfConfig":"7"},{"size":7088,"mtime":1612035910012,"results":"10","hashOfConfig":"7"},{"size":935,"mtime":1611841748126,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8z7ev2",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/eliransuisa/projects/elementeam.io/src/fb.js",[],"/Users/eliransuisa/projects/elementeam.io/src/index.js",[],"/Users/eliransuisa/projects/elementeam.io/src/reportWebVitals.js",[],"/Users/eliransuisa/projects/elementeam.io/src/App.js",["23","24","25","26","27"],"import \"./App.css\";\nimport { useEffect, useState, Fragment } from \"react\";\nimport axios from \"axios\";\nimport { Form, message, Input, Typography, Button, Select } from \"antd\";\nimport {\n  database,\n  takeScreenshot,\n  handleGoogleLogin,\n  fetchActiveUser,\n  storage,\n} from \"./fb\";\nimport { useList } from \"react-firebase-hooks/database\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { CameraOutlined, UndoOutlined, CopyOutlined } from \"@ant-design/icons\";\nimport Tags from \"./Tags\";\nconst { Title, Text } = Typography;\n\nfunction App() {\n  const [form] = Form.useForm();\n  const [activeUser, setActiveUser] = useState({ displayName: \"\" });\n  const [snapshots, loading, error] = useList(database.ref(\"categories\"));\n  const [screenshot, setScreenshot] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [uniqueId, setUniqueId] = useState();\n  const [tags, setTags] = useState([]);\n\n  useEffect(() => {\n    form.setFields([{ description: \"\" }]);\n    handleActiveUser();\n    const uniqueId = uuidv4();\n    setUniqueId(uniqueId);\n    return () => {\n      setScreenshot();\n      form.resetFields();\n    };\n  }, []);\n\n  function handleActiveUser() {\n    fetchActiveUser().then((user) => {\n      setActiveUser(user);\n    });\n  }\n\n  function handleLogin() {\n    handleGoogleLogin().then(() => {\n      handleActiveUser();\n    });\n  }\n\n  function copyToClipboard() {\n    const el = document.createElement(\"textarea\");\n    el.value = screenshot;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n    message.success({\n      content: \"Copied!\",\n      style: {\n        marginTop: \"40%\",\n      },\n    });\n  }\n\n  function playSound(url) {\n    const audio = new Audio(url);\n    audio.play();\n  }\n\n  function takeAScreenShot() {\n    window.chrome.tabs.captureVisibleTab((image) => {\n      fetch(image)\n        .then((res) => res.blob())\n        .then(async (blob) => {\n          const screenshotsRef = storage\n            .ref()\n            .child(`screenshots/some_context`);\n          const path = `/${uniqueId}.jpg`;\n          playSound(\n            \"https://webo-tests.s3.eu-west-3.amazonaws.com/camera_click.mp3\"\n          );\n          await screenshotsRef.child(path).put(blob);\n          const downloadUrl = await screenshotsRef.child(path).getDownloadURL();\n          console.log({ downloadUrl });\n          setScreenshot(downloadUrl);\n        });\n    });\n  }\n\n  function save(values) {\n    values.tags = tags;\n    values.description = values.description ? values.description : \"\";\n    window.chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n      let url = tabs[0].url;\n      setIsLoading(true);\n      const updates = {};\n      const key = database.ref().child(\"elements\").push().key;\n      updates[\"/elements/\" + key] = {\n        key,\n        ...values,\n        url,\n        createdBy: activeUser,\n      };\n      if (screenshot) {\n        updates[\"/elements/\" + key].screenshot = screenshot;\n      }\n      database\n        .ref()\n        .update(updates)\n        .then(() => {\n          setTimeout(() => {\n            setIsLoading(false);\n            message.success(\"Element has been added successfully\");\n            form.resetFields();\n            setScreenshot();\n          }, 500);\n        });\n    });\n  }\n\n  return (\n    <div style={{ padding: \"20px 50px\" }} className=\"App App-header\">\n      <Title style={{ margin: 15 }} type=\"success\" keyboard level={3}>\n        Elementeam.io\n      </Title>\n      {activeUser ? (\n        <Fragment>\n          <Text style={{ color: \"white\", marginBottom: 15 }}>\n            Hi {activeUser.displayName}\n          </Text>\n          <Form onFinish={save} form={form}>\n            <Form.Item\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input a title\",\n                },\n              ]}\n              style={{ width: 200 }}\n              name=\"title\"\n            >\n              <Input placeholder=\"Title\" />\n            </Form.Item>\n            <Form.Item style={{ width: 200 }} name=\"description\">\n              <Input.TextArea placeholder=\"Description (optional)\" />\n            </Form.Item>\n            <Form.Item\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select category\",\n                },\n              ]}\n              name=\"category\"\n            >\n              <Select placeholder=\"Category\">\n                {snapshots.map((snap) => {\n                  const category = snap.val();\n                  console.log({ snap, category });\n                  return (\n                    <Select.Option key={snap.key} value={snap.key}>\n                      {category.name}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n            <Tags onSelect={(tags) => setTags(tags)} />\n            <Button\n              type=\"link\"\n              style={{\n                margin: \"10px 0\",\n              }}\n              onClick={takeAScreenShot}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                }}\n              >\n                {!screenshot ? \"Take a Screenshot\" : \"Take another one\"}\n                {!screenshot ? (\n                  <CameraOutlined style={{ marginLeft: 5, fontSize: 18 }} />\n                ) : (\n                  <UndoOutlined style={{ marginLeft: 5, fontSize: 18 }} />\n                )}\n              </div>\n            </Button>\n            {screenshot && (\n              <div\n                style={{\n                  cursor: \"pointer\",\n                  color: \"white\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  marginBottom: 10,\n                }}\n              >\n                Copy URL\n                <CopyOutlined\n                  onClick={copyToClipboard}\n                  style={{\n                    marginRight: 5,\n                    color: \"white\",\n                    fontSize: 18,\n                  }}\n                />\n              </div>\n            )}\n            <Button loading={isLoading} htmlType=\"submit\">\n              Save\n            </Button>\n            <div style={{ marginTop: 20 }}>\n              <a\n                rel=\"noreferrer\"\n                target=\"_blank\"\n                href=\"https://admin.elementeam.io\"\n              >\n                Go to Admin Panel\n              </a>\n            </div>\n          </Form>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <Button onClick={handleLogin}>Login</Button>\n        </Fragment>\n      )}\n      <div\n        style={{\n          marginTop: 5,\n          fontSize: 10,\n        }}\n      >\n        <span style={{ marginRight: 3 }}>Powered by</span>\n        <a rel=\"noreferrer\" target=\"_blank\" href=\"https://webo-tech.com\">\n          Webo-Tech.com\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/eliransuisa/projects/elementeam.io/src/Tags.jsx",[],{"ruleId":"28","severity":1,"message":"29","line":3,"column":8,"nodeType":"30","messageId":"31","endLine":3,"endColumn":13},{"ruleId":"28","severity":1,"message":"32","line":7,"column":3,"nodeType":"30","messageId":"31","endLine":7,"endColumn":17},{"ruleId":"28","severity":1,"message":"33","line":21,"column":21,"nodeType":"30","messageId":"31","endLine":21,"endColumn":28},{"ruleId":"28","severity":1,"message":"34","line":21,"column":30,"nodeType":"30","messageId":"31","endLine":21,"endColumn":35},{"ruleId":"35","severity":1,"message":"36","line":36,"column":6,"nodeType":"37","endLine":36,"endColumn":8,"suggestions":"38"},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'takeScreenshot' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.","ArrayExpression",["39"],{"desc":"40","fix":"41"},"Update the dependencies array to be: [form]",{"range":"42","text":"43"},[1129,1131],"[form]"]